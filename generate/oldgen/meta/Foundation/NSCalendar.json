{
    "kind": "class",
    "name": "NSCalendar",
    "module": "Foundation",
    "parent": "objectivec.NSObject *",
    "properties": [
        {
            "name": "currentCalendar",
            "read_only": true,
            "type": "Foundation.NSCalendar *",
            "class_property": true
        },
        {
            "name": "autoupdatingCurrentCalendar",
            "read_only": true,
            "type": "Foundation.NSCalendar *",
            "class_property": true
        },
        {
            "name": "calendarIdentifier",
            "read_only": true,
            "type": "Foundation.NSCalendarIdentifier"
        },
        {
            "name": "firstWeekday",
            "type": "NSUInteger"
        },
        {
            "name": "locale",
            "type": "Foundation.NSLocale *"
        },
        {
            "name": "timeZone",
            "type": "Foundation.NSTimeZone *"
        },
        {
            "name": "minimumDaysInFirstWeek",
            "type": "NSUInteger"
        },
        {
            "name": "AMSymbol",
            "read_only": true,
            "type": "NSString*"
        },
        {
            "name": "PMSymbol",
            "read_only": true,
            "type": "NSString*"
        },
        {
            "name": "weekdaySymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "shortWeekdaySymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "veryShortWeekdaySymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "standaloneWeekdaySymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "shortStandaloneWeekdaySymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "veryShortStandaloneWeekdaySymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "monthSymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "shortMonthSymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "veryShortMonthSymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "standaloneMonthSymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "shortStandaloneMonthSymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "veryShortStandaloneMonthSymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "quarterSymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "shortQuarterSymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "standaloneQuarterSymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "shortStandaloneQuarterSymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "eraSymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        },
        {
            "name": "longEraSymbols",
            "read_only": true,
            "type": "NSArray<NSString*> *"
        }
    ],
    "methods": [
        {
            "name": "calendarWithIdentifier",
            "params": [
                {
                    "variable_name": "calendarIdentifierConstant",
                    "type": "Foundation.NSCalendarIdentifier"
                }
            ],
            "return_type": "Foundation.NSCalendar *",
            "class_method": true
        },
        {
            "name": "initWithCalendarIdentifier",
            "params": [
                {
                    "variable_name": "ident",
                    "type": "Foundation.NSCalendarIdentifier"
                }
            ],
            "return_type": "objectivec.NSObject *"
        },
        {
            "name": "date",
            "params": [
                {
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "matchesComponents",
                    "variable_name": "components",
                    "type": "Foundation.NSDateComponents *"
                }
            ],
            "return_type": "BOOL"
        },
        {
            "name": "component",
            "params": [
                {
                    "variable_name": "unit",
                    "type": "Foundation.NSCalendarUnit"
                },
                {
                    "name": "fromDate",
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                }
            ],
            "return_type": "NSInteger"
        },
        {
            "name": "components",
            "params": [
                {
                    "variable_name": "unitFlags",
                    "type": "Foundation.NSCalendarUnit"
                },
                {
                    "name": "fromDate",
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                }
            ],
            "return_type": "Foundation.NSDateComponents *"
        },
        {
            "name": "components",
            "params": [
                {
                    "variable_name": "unitFlags",
                    "type": "Foundation.NSCalendarUnit"
                },
                {
                    "name": "fromDate",
                    "variable_name": "startingDate",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "toDate",
                    "variable_name": "resultDate",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "options",
                    "variable_name": "opts",
                    "type": "Foundation.NSCalendarOptions"
                }
            ],
            "return_type": "Foundation.NSDateComponents *"
        },
        {
            "name": "components",
            "params": [
                {
                    "variable_name": "unitFlags",
                    "type": "Foundation.NSCalendarUnit"
                },
                {
                    "name": "fromDateComponents",
                    "variable_name": "startingDateComp",
                    "type": "Foundation.NSDateComponents *"
                },
                {
                    "name": "toDateComponents",
                    "variable_name": "resultDateComp",
                    "type": "Foundation.NSDateComponents *"
                },
                {
                    "name": "options",
                    "variable_name": "options",
                    "type": "Foundation.NSCalendarOptions"
                }
            ],
            "return_type": "Foundation.NSDateComponents *"
        },
        {
            "name": "componentsInTimeZone",
            "params": [
                {
                    "variable_name": "timezone",
                    "type": "Foundation.NSTimeZone *"
                },
                {
                    "name": "fromDate",
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                }
            ],
            "return_type": "Foundation.NSDateComponents *"
        },
        {
            "name": "maximumRangeOfUnit",
            "params": [
                {
                    "variable_name": "unit",
                    "type": "Foundation.NSCalendarUnit"
                }
            ],
            "return_type": "Foundation.NSRange"
        },
        {
            "name": "minimumRangeOfUnit",
            "params": [
                {
                    "variable_name": "unit",
                    "type": "Foundation.NSCalendarUnit"
                }
            ],
            "return_type": "Foundation.NSRange"
        },
        {
            "name": "ordinalityOfUnit",
            "params": [
                {
                    "variable_name": "smaller",
                    "type": "Foundation.NSCalendarUnit"
                },
                {
                    "name": "inUnit",
                    "variable_name": "larger",
                    "type": "Foundation.NSCalendarUnit"
                },
                {
                    "name": "forDate",
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                }
            ],
            "return_type": "NSUInteger"
        },
        {
            "name": "rangeOfUnit",
            "params": [
                {
                    "variable_name": "smaller",
                    "type": "Foundation.NSCalendarUnit"
                },
                {
                    "name": "inUnit",
                    "variable_name": "larger",
                    "type": "Foundation.NSCalendarUnit"
                },
                {
                    "name": "forDate",
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                }
            ],
            "return_type": "Foundation.NSRange"
        },
        {
            "name": "rangeOfUnit",
            "params": [
                {
                    "variable_name": "unit",
                    "type": "Foundation.NSCalendarUnit"
                },
                {
                    "name": "startDate",
                    "variable_name": "datep",
                    "type": "Foundation.NSDate * *"
                },
                {
                    "name": "interval",
                    "variable_name": "tip",
                    "type": "Foundation.NSTimeInterval *"
                },
                {
                    "name": "forDate",
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                }
            ],
            "return_type": "BOOL"
        },
        {
            "name": "startOfDayForDate",
            "params": [
                {
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                }
            ],
            "return_type": "Foundation.NSDate *"
        },
        {
            "name": "enumerateDatesStartingAfterDate",
            "params": [
                {
                    "variable_name": "start",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "matchingComponents",
                    "variable_name": "comps",
                    "type": "Foundation.NSDateComponents *"
                },
                {
                    "name": "options",
                    "variable_name": "opts",
                    "type": "Foundation.NSCalendarOptions"
                },
                {
                    "name": "usingBlock",
                    "variable_name": "block",
                    "type": "void (^) (Foundation.NSDate * date, BOOL exactMatch, BOOL * stop)"
                }
            ],
            "return_type": "void"
        },
        {
            "name": "nextDateAfterDate",
            "params": [
                {
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "matchingComponents",
                    "variable_name": "comps",
                    "type": "Foundation.NSDateComponents *"
                },
                {
                    "name": "options",
                    "variable_name": "options",
                    "type": "Foundation.NSCalendarOptions"
                }
            ],
            "return_type": "Foundation.NSDate *"
        },
        {
            "name": "nextDateAfterDate",
            "params": [
                {
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "matchingHour",
                    "variable_name": "hourValue",
                    "type": "NSInteger"
                },
                {
                    "name": "minute",
                    "variable_name": "minuteValue",
                    "type": "NSInteger"
                },
                {
                    "name": "second",
                    "variable_name": "secondValue",
                    "type": "NSInteger"
                },
                {
                    "name": "options",
                    "variable_name": "options",
                    "type": "Foundation.NSCalendarOptions"
                }
            ],
            "return_type": "Foundation.NSDate *"
        },
        {
            "name": "nextDateAfterDate",
            "params": [
                {
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "matchingUnit",
                    "variable_name": "unit",
                    "type": "Foundation.NSCalendarUnit"
                },
                {
                    "name": "value",
                    "variable_name": "value",
                    "type": "NSInteger"
                },
                {
                    "name": "options",
                    "variable_name": "options",
                    "type": "Foundation.NSCalendarOptions"
                }
            ],
            "return_type": "Foundation.NSDate *"
        },
        {
            "name": "dateFromComponents",
            "params": [
                {
                    "variable_name": "comps",
                    "type": "Foundation.NSDateComponents *"
                }
            ],
            "return_type": "Foundation.NSDate *"
        },
        {
            "name": "dateByAddingComponents",
            "params": [
                {
                    "variable_name": "comps",
                    "type": "Foundation.NSDateComponents *"
                },
                {
                    "name": "toDate",
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "options",
                    "variable_name": "opts",
                    "type": "Foundation.NSCalendarOptions"
                }
            ],
            "return_type": "Foundation.NSDate *"
        },
        {
            "name": "dateByAddingUnit",
            "params": [
                {
                    "variable_name": "unit",
                    "type": "Foundation.NSCalendarUnit"
                },
                {
                    "name": "value",
                    "variable_name": "value",
                    "type": "NSInteger"
                },
                {
                    "name": "toDate",
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "options",
                    "variable_name": "options",
                    "type": "Foundation.NSCalendarOptions"
                }
            ],
            "return_type": "Foundation.NSDate *"
        },
        {
            "name": "dateBySettingHour",
            "params": [
                {
                    "variable_name": "h",
                    "type": "NSInteger"
                },
                {
                    "name": "minute",
                    "variable_name": "m",
                    "type": "NSInteger"
                },
                {
                    "name": "second",
                    "variable_name": "s",
                    "type": "NSInteger"
                },
                {
                    "name": "ofDate",
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "options",
                    "variable_name": "opts",
                    "type": "Foundation.NSCalendarOptions"
                }
            ],
            "return_type": "Foundation.NSDate *"
        },
        {
            "name": "dateBySettingUnit",
            "params": [
                {
                    "variable_name": "unit",
                    "type": "Foundation.NSCalendarUnit"
                },
                {
                    "name": "value",
                    "variable_name": "v",
                    "type": "NSInteger"
                },
                {
                    "name": "ofDate",
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "options",
                    "variable_name": "opts",
                    "type": "Foundation.NSCalendarOptions"
                }
            ],
            "return_type": "Foundation.NSDate *"
        },
        {
            "name": "dateWithEra",
            "params": [
                {
                    "variable_name": "eraValue",
                    "type": "NSInteger"
                },
                {
                    "name": "year",
                    "variable_name": "yearValue",
                    "type": "NSInteger"
                },
                {
                    "name": "month",
                    "variable_name": "monthValue",
                    "type": "NSInteger"
                },
                {
                    "name": "day",
                    "variable_name": "dayValue",
                    "type": "NSInteger"
                },
                {
                    "name": "hour",
                    "variable_name": "hourValue",
                    "type": "NSInteger"
                },
                {
                    "name": "minute",
                    "variable_name": "minuteValue",
                    "type": "NSInteger"
                },
                {
                    "name": "second",
                    "variable_name": "secondValue",
                    "type": "NSInteger"
                },
                {
                    "name": "nanosecond",
                    "variable_name": "nanosecondValue",
                    "type": "NSInteger"
                }
            ],
            "return_type": "Foundation.NSDate *"
        },
        {
            "name": "dateWithEra",
            "params": [
                {
                    "variable_name": "eraValue",
                    "type": "NSInteger"
                },
                {
                    "name": "yearForWeekOfYear",
                    "variable_name": "yearValue",
                    "type": "NSInteger"
                },
                {
                    "name": "weekOfYear",
                    "variable_name": "weekValue",
                    "type": "NSInteger"
                },
                {
                    "name": "weekday",
                    "variable_name": "weekdayValue",
                    "type": "NSInteger"
                },
                {
                    "name": "hour",
                    "variable_name": "hourValue",
                    "type": "NSInteger"
                },
                {
                    "name": "minute",
                    "variable_name": "minuteValue",
                    "type": "NSInteger"
                },
                {
                    "name": "second",
                    "variable_name": "secondValue",
                    "type": "NSInteger"
                },
                {
                    "name": "nanosecond",
                    "variable_name": "nanosecondValue",
                    "type": "NSInteger"
                }
            ],
            "return_type": "Foundation.NSDate *"
        },
        {
            "name": "compareDate",
            "params": [
                {
                    "variable_name": "date1",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "toDate",
                    "variable_name": "date2",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "toUnitGranularity",
                    "variable_name": "unit",
                    "type": "Foundation.NSCalendarUnit"
                }
            ],
            "return_type": "Foundation.NSComparisonResult"
        },
        {
            "name": "isDate",
            "params": [
                {
                    "variable_name": "date1",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "equalToDate",
                    "variable_name": "date2",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "toUnitGranularity",
                    "variable_name": "unit",
                    "type": "Foundation.NSCalendarUnit"
                }
            ],
            "return_type": "BOOL"
        },
        {
            "name": "isDate",
            "params": [
                {
                    "variable_name": "date1",
                    "type": "Foundation.NSDate *"
                },
                {
                    "name": "inSameDayAsDate",
                    "variable_name": "date2",
                    "type": "Foundation.NSDate *"
                }
            ],
            "return_type": "BOOL"
        },
        {
            "name": "isDateInToday",
            "params": [
                {
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                }
            ],
            "return_type": "BOOL"
        },
        {
            "name": "isDateInTomorrow",
            "params": [
                {
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                }
            ],
            "return_type": "BOOL"
        },
        {
            "name": "isDateInWeekend",
            "params": [
                {
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                }
            ],
            "return_type": "BOOL"
        },
        {
            "name": "isDateInYesterday",
            "params": [
                {
                    "variable_name": "date",
                    "type": "Foundation.NSDate *"
                }
            ],
            "return_type": "BOOL"
        }
    ]
}
