// Code generated by DarwinKit. DO NOT EDIT.

package coreimage

import (
	"github.com/progrium/darwinkit/objc"
)

// The properties you use to configure a Lanczos scale transform filter. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cilanczosscaletransform?language=objc
type PLanczosScaleTransform interface {
	// optional
	SetScale(value float32)
	HasSetScale() bool

	// optional
	Scale() float32
	HasScale() bool

	// optional
	SetInputImage(value Image)
	HasSetInputImage() bool

	// optional
	InputImage() Image
	HasInputImage() bool

	// optional
	SetAspectRatio(value float32)
	HasSetAspectRatio() bool

	// optional
	AspectRatio() float32
	HasAspectRatio() bool
}

// ensure impl type implements protocol interface
var _ PLanczosScaleTransform = (*LanczosScaleTransformObject)(nil)

// A concrete type for the [PLanczosScaleTransform] protocol.
type LanczosScaleTransformObject struct {
	objc.Object
}

func (l_ LanczosScaleTransformObject) HasSetScale() bool {
	return l_.RespondsToSelector(objc.Sel("setScale:"))
}

// The scaling factor to use on the image. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cilanczosscaletransform/3228518-scale?language=objc
func (l_ LanczosScaleTransformObject) SetScale(value float32) {
	objc.Call[objc.Void](l_, objc.Sel("setScale:"), value)
}

func (l_ LanczosScaleTransformObject) HasScale() bool {
	return l_.RespondsToSelector(objc.Sel("scale"))
}

// The scaling factor to use on the image. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cilanczosscaletransform/3228518-scale?language=objc
func (l_ LanczosScaleTransformObject) Scale() float32 {
	rv := objc.Call[float32](l_, objc.Sel("scale"))
	return rv
}

func (l_ LanczosScaleTransformObject) HasSetInputImage() bool {
	return l_.RespondsToSelector(objc.Sel("setInputImage:"))
}

// The image to use as an input image. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cilanczosscaletransform/3228517-inputimage?language=objc
func (l_ LanczosScaleTransformObject) SetInputImage(value Image) {
	objc.Call[objc.Void](l_, objc.Sel("setInputImage:"), value)
}

func (l_ LanczosScaleTransformObject) HasInputImage() bool {
	return l_.RespondsToSelector(objc.Sel("inputImage"))
}

// The image to use as an input image. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cilanczosscaletransform/3228517-inputimage?language=objc
func (l_ LanczosScaleTransformObject) InputImage() Image {
	rv := objc.Call[Image](l_, objc.Sel("inputImage"))
	return rv
}

func (l_ LanczosScaleTransformObject) HasSetAspectRatio() bool {
	return l_.RespondsToSelector(objc.Sel("setAspectRatio:"))
}

// The additional horizontal scaling factor to use on the image. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cilanczosscaletransform/3228516-aspectratio?language=objc
func (l_ LanczosScaleTransformObject) SetAspectRatio(value float32) {
	objc.Call[objc.Void](l_, objc.Sel("setAspectRatio:"), value)
}

func (l_ LanczosScaleTransformObject) HasAspectRatio() bool {
	return l_.RespondsToSelector(objc.Sel("aspectRatio"))
}

// The additional horizontal scaling factor to use on the image. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cilanczosscaletransform/3228516-aspectratio?language=objc
func (l_ LanczosScaleTransformObject) AspectRatio() float32 {
	rv := objc.Call[float32](l_, objc.Sel("aspectRatio"))
	return rv
}
