// Code generated by DarwinKit. DO NOT EDIT.

package coreimage

import (
	"github.com/progrium/darwinkit/macos/coregraphics"
	"github.com/progrium/darwinkit/objc"
)

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibumpdistortion?language=objc
type PBumpDistortion interface {
	// optional
	SetScale(value float32)
	HasSetScale() bool

	// optional
	Scale() float32
	HasScale() bool

	// optional
	SetInputImage(value Image)
	HasSetInputImage() bool

	// optional
	InputImage() Image
	HasInputImage() bool

	// optional
	SetRadius(value float32)
	HasSetRadius() bool

	// optional
	Radius() float32
	HasRadius() bool

	// optional
	SetCenter(value coregraphics.Point)
	HasSetCenter() bool

	// optional
	Center() coregraphics.Point
	HasCenter() bool
}

// ensure impl type implements protocol interface
var _ PBumpDistortion = (*BumpDistortionObject)(nil)

// A concrete type for the [PBumpDistortion] protocol.
type BumpDistortionObject struct {
	objc.Object
}

func (b_ BumpDistortionObject) HasSetScale() bool {
	return b_.RespondsToSelector(objc.Sel("setScale:"))
}

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibumpdistortion/3600110-scale?language=objc
func (b_ BumpDistortionObject) SetScale(value float32) {
	objc.Call[objc.Void](b_, objc.Sel("setScale:"), value)
}

func (b_ BumpDistortionObject) HasScale() bool {
	return b_.RespondsToSelector(objc.Sel("scale"))
}

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibumpdistortion/3600110-scale?language=objc
func (b_ BumpDistortionObject) Scale() float32 {
	rv := objc.Call[float32](b_, objc.Sel("scale"))
	return rv
}

func (b_ BumpDistortionObject) HasSetInputImage() bool {
	return b_.RespondsToSelector(objc.Sel("setInputImage:"))
}

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibumpdistortion/3600108-inputimage?language=objc
func (b_ BumpDistortionObject) SetInputImage(value Image) {
	objc.Call[objc.Void](b_, objc.Sel("setInputImage:"), value)
}

func (b_ BumpDistortionObject) HasInputImage() bool {
	return b_.RespondsToSelector(objc.Sel("inputImage"))
}

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibumpdistortion/3600108-inputimage?language=objc
func (b_ BumpDistortionObject) InputImage() Image {
	rv := objc.Call[Image](b_, objc.Sel("inputImage"))
	return rv
}

func (b_ BumpDistortionObject) HasSetRadius() bool {
	return b_.RespondsToSelector(objc.Sel("setRadius:"))
}

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibumpdistortion/3600109-radius?language=objc
func (b_ BumpDistortionObject) SetRadius(value float32) {
	objc.Call[objc.Void](b_, objc.Sel("setRadius:"), value)
}

func (b_ BumpDistortionObject) HasRadius() bool {
	return b_.RespondsToSelector(objc.Sel("radius"))
}

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibumpdistortion/3600109-radius?language=objc
func (b_ BumpDistortionObject) Radius() float32 {
	rv := objc.Call[float32](b_, objc.Sel("radius"))
	return rv
}

func (b_ BumpDistortionObject) HasSetCenter() bool {
	return b_.RespondsToSelector(objc.Sel("setCenter:"))
}

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibumpdistortion/3600107-center?language=objc
func (b_ BumpDistortionObject) SetCenter(value coregraphics.Point) {
	objc.Call[objc.Void](b_, objc.Sel("setCenter:"), value)
}

func (b_ BumpDistortionObject) HasCenter() bool {
	return b_.RespondsToSelector(objc.Sel("center"))
}

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibumpdistortion/3600107-center?language=objc
func (b_ BumpDistortionObject) Center() coregraphics.Point {
	rv := objc.Call[coregraphics.Point](b_, objc.Sel("center"))
	return rv
}
