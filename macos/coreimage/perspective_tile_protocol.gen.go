// Code generated by DarwinKit. DO NOT EDIT.

package coreimage

import (
	"github.com/progrium/darwinkit/macos/coregraphics"
	"github.com/progrium/darwinkit/objc"
)

// The properties you use to configure a perspective tile filter. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/ciperspectivetile?language=objc
type PPerspectiveTile interface {
	// optional
	SetBottomRight(value coregraphics.Point)
	HasSetBottomRight() bool

	// optional
	BottomRight() coregraphics.Point
	HasBottomRight() bool

	// optional
	SetInputImage(value Image)
	HasSetInputImage() bool

	// optional
	InputImage() Image
	HasInputImage() bool

	// optional
	SetBottomLeft(value coregraphics.Point)
	HasSetBottomLeft() bool

	// optional
	BottomLeft() coregraphics.Point
	HasBottomLeft() bool

	// optional
	SetTopRight(value coregraphics.Point)
	HasSetTopRight() bool

	// optional
	TopRight() coregraphics.Point
	HasTopRight() bool

	// optional
	SetTopLeft(value coregraphics.Point)
	HasSetTopLeft() bool

	// optional
	TopLeft() coregraphics.Point
	HasTopLeft() bool
}

// ensure impl type implements protocol interface
var _ PPerspectiveTile = (*PerspectiveTileObject)(nil)

// A concrete type for the [PPerspectiveTile] protocol.
type PerspectiveTileObject struct {
	objc.Object
}

func (p_ PerspectiveTileObject) HasSetBottomRight() bool {
	return p_.RespondsToSelector(objc.Sel("setBottomRight:"))
}

// The bottom-right coordinate of a tile. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/ciperspectivetile/3228654-bottomright?language=objc
func (p_ PerspectiveTileObject) SetBottomRight(value coregraphics.Point) {
	objc.Call[objc.Void](p_, objc.Sel("setBottomRight:"), value)
}

func (p_ PerspectiveTileObject) HasBottomRight() bool {
	return p_.RespondsToSelector(objc.Sel("bottomRight"))
}

// The bottom-right coordinate of a tile. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/ciperspectivetile/3228654-bottomright?language=objc
func (p_ PerspectiveTileObject) BottomRight() coregraphics.Point {
	rv := objc.Call[coregraphics.Point](p_, objc.Sel("bottomRight"))
	return rv
}

func (p_ PerspectiveTileObject) HasSetInputImage() bool {
	return p_.RespondsToSelector(objc.Sel("setInputImage:"))
}

// The image to use as an input image. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/ciperspectivetile/3228655-inputimage?language=objc
func (p_ PerspectiveTileObject) SetInputImage(value Image) {
	objc.Call[objc.Void](p_, objc.Sel("setInputImage:"), value)
}

func (p_ PerspectiveTileObject) HasInputImage() bool {
	return p_.RespondsToSelector(objc.Sel("inputImage"))
}

// The image to use as an input image. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/ciperspectivetile/3228655-inputimage?language=objc
func (p_ PerspectiveTileObject) InputImage() Image {
	rv := objc.Call[Image](p_, objc.Sel("inputImage"))
	return rv
}

func (p_ PerspectiveTileObject) HasSetBottomLeft() bool {
	return p_.RespondsToSelector(objc.Sel("setBottomLeft:"))
}

// The bottom-left coordinate of a tile. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/ciperspectivetile/3228653-bottomleft?language=objc
func (p_ PerspectiveTileObject) SetBottomLeft(value coregraphics.Point) {
	objc.Call[objc.Void](p_, objc.Sel("setBottomLeft:"), value)
}

func (p_ PerspectiveTileObject) HasBottomLeft() bool {
	return p_.RespondsToSelector(objc.Sel("bottomLeft"))
}

// The bottom-left coordinate of a tile. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/ciperspectivetile/3228653-bottomleft?language=objc
func (p_ PerspectiveTileObject) BottomLeft() coregraphics.Point {
	rv := objc.Call[coregraphics.Point](p_, objc.Sel("bottomLeft"))
	return rv
}

func (p_ PerspectiveTileObject) HasSetTopRight() bool {
	return p_.RespondsToSelector(objc.Sel("setTopRight:"))
}

// The top-right coordinate of a tile. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/ciperspectivetile/3228657-topright?language=objc
func (p_ PerspectiveTileObject) SetTopRight(value coregraphics.Point) {
	objc.Call[objc.Void](p_, objc.Sel("setTopRight:"), value)
}

func (p_ PerspectiveTileObject) HasTopRight() bool {
	return p_.RespondsToSelector(objc.Sel("topRight"))
}

// The top-right coordinate of a tile. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/ciperspectivetile/3228657-topright?language=objc
func (p_ PerspectiveTileObject) TopRight() coregraphics.Point {
	rv := objc.Call[coregraphics.Point](p_, objc.Sel("topRight"))
	return rv
}

func (p_ PerspectiveTileObject) HasSetTopLeft() bool {
	return p_.RespondsToSelector(objc.Sel("setTopLeft:"))
}

// The top-left coordinate of a tile. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/ciperspectivetile/3228656-topleft?language=objc
func (p_ PerspectiveTileObject) SetTopLeft(value coregraphics.Point) {
	objc.Call[objc.Void](p_, objc.Sel("setTopLeft:"), value)
}

func (p_ PerspectiveTileObject) HasTopLeft() bool {
	return p_.RespondsToSelector(objc.Sel("topLeft"))
}

// The top-left coordinate of a tile. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/ciperspectivetile/3228656-topleft?language=objc
func (p_ PerspectiveTileObject) TopLeft() coregraphics.Point {
	rv := objc.Call[coregraphics.Point](p_, objc.Sel("topLeft"))
	return rv
}
