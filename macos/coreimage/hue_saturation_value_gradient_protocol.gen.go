// Code generated by DarwinKit. DO NOT EDIT.

package coreimage

import (
	"github.com/progrium/darwinkit/macos/coregraphics"
	"github.com/progrium/darwinkit/objc"
)

// The properties you use to configure a hue-saturation-value gradient filter. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cihuesaturationvaluegradient?language=objc
type PHueSaturationValueGradient interface {
	// optional
	SetValue(value float32)
	HasSetValue() bool

	// optional
	Value() float32
	HasValue() bool

	// optional
	SetDither(value float32)
	HasSetDither() bool

	// optional
	Dither() float32
	HasDither() bool

	// optional
	SetColorSpace(value coregraphics.ColorSpaceRef)
	HasSetColorSpace() bool

	// optional
	ColorSpace() coregraphics.ColorSpaceRef
	HasColorSpace() bool

	// optional
	SetRadius(value float32)
	HasSetRadius() bool

	// optional
	Radius() float32
	HasRadius() bool

	// optional
	SetSoftness(value float32)
	HasSetSoftness() bool

	// optional
	Softness() float32
	HasSoftness() bool
}

// ensure impl type implements protocol interface
var _ PHueSaturationValueGradient = (*HueSaturationValueGradientObject)(nil)

// A concrete type for the [PHueSaturationValueGradient] protocol.
type HueSaturationValueGradientObject struct {
	objc.Object
}

func (h_ HueSaturationValueGradientObject) HasSetValue() bool {
	return h_.RespondsToSelector(objc.Sel("setValue:"))
}

// The lightness of the hue-saturation gradient. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cihuesaturationvaluegradient/3228506-value?language=objc
func (h_ HueSaturationValueGradientObject) SetValue(value float32) {
	objc.Call[objc.Void](h_, objc.Sel("setValue:"), value)
}

func (h_ HueSaturationValueGradientObject) HasValue() bool {
	return h_.RespondsToSelector(objc.Sel("value"))
}

// The lightness of the hue-saturation gradient. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cihuesaturationvaluegradient/3228506-value?language=objc
func (h_ HueSaturationValueGradientObject) Value() float32 {
	rv := objc.Call[float32](h_, objc.Sel("value"))
	return rv
}

func (h_ HueSaturationValueGradientObject) HasSetDither() bool {
	return h_.RespondsToSelector(objc.Sel("setDither:"))
}

// A Boolean value specifying whether the dither the generated output. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cihuesaturationvaluegradient/3228503-dither?language=objc
func (h_ HueSaturationValueGradientObject) SetDither(value float32) {
	objc.Call[objc.Void](h_, objc.Sel("setDither:"), value)
}

func (h_ HueSaturationValueGradientObject) HasDither() bool {
	return h_.RespondsToSelector(objc.Sel("dither"))
}

// A Boolean value specifying whether the dither the generated output. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cihuesaturationvaluegradient/3228503-dither?language=objc
func (h_ HueSaturationValueGradientObject) Dither() float32 {
	rv := objc.Call[float32](h_, objc.Sel("dither"))
	return rv
}

func (h_ HueSaturationValueGradientObject) HasSetColorSpace() bool {
	return h_.RespondsToSelector(objc.Sel("setColorSpace:"))
}

// The color space for the generated color wheel. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cihuesaturationvaluegradient/3228502-colorspace?language=objc
func (h_ HueSaturationValueGradientObject) SetColorSpace(value coregraphics.ColorSpaceRef) {
	objc.Call[objc.Void](h_, objc.Sel("setColorSpace:"), value)
}

func (h_ HueSaturationValueGradientObject) HasColorSpace() bool {
	return h_.RespondsToSelector(objc.Sel("colorSpace"))
}

// The color space for the generated color wheel. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cihuesaturationvaluegradient/3228502-colorspace?language=objc
func (h_ HueSaturationValueGradientObject) ColorSpace() coregraphics.ColorSpaceRef {
	rv := objc.Call[coregraphics.ColorSpaceRef](h_, objc.Sel("colorSpace"))
	return rv
}

func (h_ HueSaturationValueGradientObject) HasSetRadius() bool {
	return h_.RespondsToSelector(objc.Sel("setRadius:"))
}

// The distance from the center of the effect. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cihuesaturationvaluegradient/3228504-radius?language=objc
func (h_ HueSaturationValueGradientObject) SetRadius(value float32) {
	objc.Call[objc.Void](h_, objc.Sel("setRadius:"), value)
}

func (h_ HueSaturationValueGradientObject) HasRadius() bool {
	return h_.RespondsToSelector(objc.Sel("radius"))
}

// The distance from the center of the effect. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cihuesaturationvaluegradient/3228504-radius?language=objc
func (h_ HueSaturationValueGradientObject) Radius() float32 {
	rv := objc.Call[float32](h_, objc.Sel("radius"))
	return rv
}

func (h_ HueSaturationValueGradientObject) HasSetSoftness() bool {
	return h_.RespondsToSelector(objc.Sel("setSoftness:"))
}

// The softness of the generated color wheel. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cihuesaturationvaluegradient/3228505-softness?language=objc
func (h_ HueSaturationValueGradientObject) SetSoftness(value float32) {
	objc.Call[objc.Void](h_, objc.Sel("setSoftness:"), value)
}

func (h_ HueSaturationValueGradientObject) HasSoftness() bool {
	return h_.RespondsToSelector(objc.Sel("softness"))
}

// The softness of the generated color wheel. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cihuesaturationvaluegradient/3228505-softness?language=objc
func (h_ HueSaturationValueGradientObject) Softness() float32 {
	rv := objc.Call[float32](h_, objc.Sel("softness"))
	return rv
}
