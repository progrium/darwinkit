// Code generated by DarwinKit. DO NOT EDIT.

package coreimage

import (
	"github.com/progrium/darwinkit/objc"
)

// The properties you use to configure a color polynomial filter. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cicolorpolynomial?language=objc
type PColorPolynomial interface {
	// optional
	SetRedCoefficients(value Vector)
	HasSetRedCoefficients() bool

	// optional
	RedCoefficients() Vector
	HasRedCoefficients() bool

	// optional
	SetInputImage(value Image)
	HasSetInputImage() bool

	// optional
	InputImage() Image
	HasInputImage() bool

	// optional
	SetGreenCoefficients(value Vector)
	HasSetGreenCoefficients() bool

	// optional
	GreenCoefficients() Vector
	HasGreenCoefficients() bool

	// optional
	SetBlueCoefficients(value Vector)
	HasSetBlueCoefficients() bool

	// optional
	BlueCoefficients() Vector
	HasBlueCoefficients() bool

	// optional
	SetAlphaCoefficients(value Vector)
	HasSetAlphaCoefficients() bool

	// optional
	AlphaCoefficients() Vector
	HasAlphaCoefficients() bool
}

// ensure impl type implements protocol interface
var _ PColorPolynomial = (*ColorPolynomialObject)(nil)

// A concrete type for the [PColorPolynomial] protocol.
type ColorPolynomialObject struct {
	objc.Object
}

func (c_ ColorPolynomialObject) HasSetRedCoefficients() bool {
	return c_.RespondsToSelector(objc.Sel("setRedCoefficients:"))
}

// Polynomial coefficients for the red channel. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cicolorpolynomial/3228175-redcoefficients?language=objc
func (c_ ColorPolynomialObject) SetRedCoefficients(value Vector) {
	objc.Call[objc.Void](c_, objc.Sel("setRedCoefficients:"), value)
}

func (c_ ColorPolynomialObject) HasRedCoefficients() bool {
	return c_.RespondsToSelector(objc.Sel("redCoefficients"))
}

// Polynomial coefficients for the red channel. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cicolorpolynomial/3228175-redcoefficients?language=objc
func (c_ ColorPolynomialObject) RedCoefficients() Vector {
	rv := objc.Call[Vector](c_, objc.Sel("redCoefficients"))
	return rv
}

func (c_ ColorPolynomialObject) HasSetInputImage() bool {
	return c_.RespondsToSelector(objc.Sel("setInputImage:"))
}

// The image to use as an input image. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cicolorpolynomial/3228174-inputimage?language=objc
func (c_ ColorPolynomialObject) SetInputImage(value Image) {
	objc.Call[objc.Void](c_, objc.Sel("setInputImage:"), value)
}

func (c_ ColorPolynomialObject) HasInputImage() bool {
	return c_.RespondsToSelector(objc.Sel("inputImage"))
}

// The image to use as an input image. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cicolorpolynomial/3228174-inputimage?language=objc
func (c_ ColorPolynomialObject) InputImage() Image {
	rv := objc.Call[Image](c_, objc.Sel("inputImage"))
	return rv
}

func (c_ ColorPolynomialObject) HasSetGreenCoefficients() bool {
	return c_.RespondsToSelector(objc.Sel("setGreenCoefficients:"))
}

// Polynomial coefficients for the green channel. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cicolorpolynomial/3228173-greencoefficients?language=objc
func (c_ ColorPolynomialObject) SetGreenCoefficients(value Vector) {
	objc.Call[objc.Void](c_, objc.Sel("setGreenCoefficients:"), value)
}

func (c_ ColorPolynomialObject) HasGreenCoefficients() bool {
	return c_.RespondsToSelector(objc.Sel("greenCoefficients"))
}

// Polynomial coefficients for the green channel. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cicolorpolynomial/3228173-greencoefficients?language=objc
func (c_ ColorPolynomialObject) GreenCoefficients() Vector {
	rv := objc.Call[Vector](c_, objc.Sel("greenCoefficients"))
	return rv
}

func (c_ ColorPolynomialObject) HasSetBlueCoefficients() bool {
	return c_.RespondsToSelector(objc.Sel("setBlueCoefficients:"))
}

// Polynomial coefficients for the blue channel. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cicolorpolynomial/3228172-bluecoefficients?language=objc
func (c_ ColorPolynomialObject) SetBlueCoefficients(value Vector) {
	objc.Call[objc.Void](c_, objc.Sel("setBlueCoefficients:"), value)
}

func (c_ ColorPolynomialObject) HasBlueCoefficients() bool {
	return c_.RespondsToSelector(objc.Sel("blueCoefficients"))
}

// Polynomial coefficients for the blue channel. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cicolorpolynomial/3228172-bluecoefficients?language=objc
func (c_ ColorPolynomialObject) BlueCoefficients() Vector {
	rv := objc.Call[Vector](c_, objc.Sel("blueCoefficients"))
	return rv
}

func (c_ ColorPolynomialObject) HasSetAlphaCoefficients() bool {
	return c_.RespondsToSelector(objc.Sel("setAlphaCoefficients:"))
}

// Polynomial coefficients for the alpha channel. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cicolorpolynomial/3228171-alphacoefficients?language=objc
func (c_ ColorPolynomialObject) SetAlphaCoefficients(value Vector) {
	objc.Call[objc.Void](c_, objc.Sel("setAlphaCoefficients:"), value)
}

func (c_ ColorPolynomialObject) HasAlphaCoefficients() bool {
	return c_.RespondsToSelector(objc.Sel("alphaCoefficients"))
}

// Polynomial coefficients for the alpha channel. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cicolorpolynomial/3228171-alphacoefficients?language=objc
func (c_ ColorPolynomialObject) AlphaCoefficients() Vector {
	rv := objc.Call[Vector](c_, objc.Sel("alphaCoefficients"))
	return rv
}
