// Code generated by DarwinKit. DO NOT EDIT.

package coreimage

import (
	"github.com/progrium/darwinkit/objc"
)

// The properties you use to configure a bokeh blur filter. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibokehblur?language=objc
type PBokehBlur interface {
	// optional
	SetInputImage(value Image)
	HasSetInputImage() bool

	// optional
	InputImage() Image
	HasInputImage() bool

	// optional
	SetRingSize(value float32)
	HasSetRingSize() bool

	// optional
	RingSize() float32
	HasRingSize() bool

	// optional
	SetRadius(value float32)
	HasSetRadius() bool

	// optional
	Radius() float32
	HasRadius() bool

	// optional
	SetRingAmount(value float32)
	HasSetRingAmount() bool

	// optional
	RingAmount() float32
	HasRingAmount() bool

	// optional
	SetSoftness(value float32)
	HasSetSoftness() bool

	// optional
	Softness() float32
	HasSoftness() bool
}

// ensure impl type implements protocol interface
var _ PBokehBlur = (*BokehBlurObject)(nil)

// A concrete type for the [PBokehBlur] protocol.
type BokehBlurObject struct {
	objc.Object
}

func (b_ BokehBlurObject) HasSetInputImage() bool {
	return b_.RespondsToSelector(objc.Sel("setInputImage:"))
}

// The image to use as an input image. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibokehblur/3228088-inputimage?language=objc
func (b_ BokehBlurObject) SetInputImage(value Image) {
	objc.Call[objc.Void](b_, objc.Sel("setInputImage:"), value)
}

func (b_ BokehBlurObject) HasInputImage() bool {
	return b_.RespondsToSelector(objc.Sel("inputImage"))
}

// The image to use as an input image. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibokehblur/3228088-inputimage?language=objc
func (b_ BokehBlurObject) InputImage() Image {
	rv := objc.Call[Image](b_, objc.Sel("inputImage"))
	return rv
}

func (b_ BokehBlurObject) HasSetRingSize() bool {
	return b_.RespondsToSelector(objc.Sel("setRingSize:"))
}

// The radius of the extra emphasis at the ring of the bokeh. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibokehblur/3228091-ringsize?language=objc
func (b_ BokehBlurObject) SetRingSize(value float32) {
	objc.Call[objc.Void](b_, objc.Sel("setRingSize:"), value)
}

func (b_ BokehBlurObject) HasRingSize() bool {
	return b_.RespondsToSelector(objc.Sel("ringSize"))
}

// The radius of the extra emphasis at the ring of the bokeh. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibokehblur/3228091-ringsize?language=objc
func (b_ BokehBlurObject) RingSize() float32 {
	rv := objc.Call[float32](b_, objc.Sel("ringSize"))
	return rv
}

func (b_ BokehBlurObject) HasSetRadius() bool {
	return b_.RespondsToSelector(objc.Sel("setRadius:"))
}

// The radius of the blur, in pixels. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibokehblur/3228089-radius?language=objc
func (b_ BokehBlurObject) SetRadius(value float32) {
	objc.Call[objc.Void](b_, objc.Sel("setRadius:"), value)
}

func (b_ BokehBlurObject) HasRadius() bool {
	return b_.RespondsToSelector(objc.Sel("radius"))
}

// The radius of the blur, in pixels. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibokehblur/3228089-radius?language=objc
func (b_ BokehBlurObject) Radius() float32 {
	rv := objc.Call[float32](b_, objc.Sel("radius"))
	return rv
}

func (b_ BokehBlurObject) HasSetRingAmount() bool {
	return b_.RespondsToSelector(objc.Sel("setRingAmount:"))
}

// The amount of extra emphasis at the ring of the bokeh. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibokehblur/3228090-ringamount?language=objc
func (b_ BokehBlurObject) SetRingAmount(value float32) {
	objc.Call[objc.Void](b_, objc.Sel("setRingAmount:"), value)
}

func (b_ BokehBlurObject) HasRingAmount() bool {
	return b_.RespondsToSelector(objc.Sel("ringAmount"))
}

// The amount of extra emphasis at the ring of the bokeh. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibokehblur/3228090-ringamount?language=objc
func (b_ BokehBlurObject) RingAmount() float32 {
	rv := objc.Call[float32](b_, objc.Sel("ringAmount"))
	return rv
}

func (b_ BokehBlurObject) HasSetSoftness() bool {
	return b_.RespondsToSelector(objc.Sel("setSoftness:"))
}

// The softness of the bokeh effect. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibokehblur/3228092-softness?language=objc
func (b_ BokehBlurObject) SetSoftness(value float32) {
	objc.Call[objc.Void](b_, objc.Sel("setSoftness:"), value)
}

func (b_ BokehBlurObject) HasSoftness() bool {
	return b_.RespondsToSelector(objc.Sel("softness"))
}

// The softness of the bokeh effect. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cibokehblur/3228092-softness?language=objc
func (b_ BokehBlurObject) Softness() float32 {
	rv := objc.Call[float32](b_, objc.Sel("softness"))
	return rv
}
