// Code generated by DarwinKit. DO NOT EDIT.

package appkit

import (
	"unsafe"

	"github.com/progrium/darwinkit/objc"
)

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nseditor?language=objc
type PEditor interface {
	// optional
	CommitEditing() bool
	HasCommitEditing() bool

	// optional
	CommitEditingWithDelegateDidCommitSelectorContextInfo(delegate objc.Object, didCommitSelector objc.Selector, contextInfo unsafe.Pointer)
	HasCommitEditingWithDelegateDidCommitSelectorContextInfo() bool

	// optional
	CommitEditingAndReturnError(error unsafe.Pointer) bool
	HasCommitEditingAndReturnError() bool

	// optional
	DiscardEditing()
	HasDiscardEditing() bool
}

// ensure impl type implements protocol interface
var _ PEditor = (*EditorObject)(nil)

// A concrete type for the [PEditor] protocol.
type EditorObject struct {
	objc.Object
}

func (e_ EditorObject) HasCommitEditing() bool {
	return e_.RespondsToSelector(objc.Sel("commitEditing"))
}

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nseditor/3005183-commitediting?language=objc
func (e_ EditorObject) CommitEditing() bool {
	rv := objc.Call[bool](e_, objc.Sel("commitEditing"))
	return rv
}

func (e_ EditorObject) HasCommitEditingWithDelegateDidCommitSelectorContextInfo() bool {
	return e_.RespondsToSelector(objc.Sel("commitEditingWithDelegate:didCommitSelector:contextInfo:"))
}

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nseditor/3005185-commiteditingwithdelegate?language=objc
func (e_ EditorObject) CommitEditingWithDelegateDidCommitSelectorContextInfo(delegate objc.Object, didCommitSelector objc.Selector, contextInfo unsafe.Pointer) {
	objc.Call[objc.Void](e_, objc.Sel("commitEditingWithDelegate:didCommitSelector:contextInfo:"), delegate, didCommitSelector, contextInfo)
}

func (e_ EditorObject) HasCommitEditingAndReturnError() bool {
	return e_.RespondsToSelector(objc.Sel("commitEditingAndReturnError:"))
}

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nseditor/3005184-commiteditingandreturnerror?language=objc
func (e_ EditorObject) CommitEditingAndReturnError(error unsafe.Pointer) bool {
	rv := objc.Call[bool](e_, objc.Sel("commitEditingAndReturnError:"), error)
	return rv
}

func (e_ EditorObject) HasDiscardEditing() bool {
	return e_.RespondsToSelector(objc.Sel("discardEditing"))
}

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nseditor/3005186-discardediting?language=objc
func (e_ EditorObject) DiscardEditing() {
	objc.Call[objc.Void](e_, objc.Sel("discardEditing"))
}
