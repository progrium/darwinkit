// Code generated by DarwinKit. DO NOT EDIT.

package appkit

import (
	"github.com/progrium/darwinkit/objc"
)

// A set of methods that a scrubber data source object implements to provide items to the scrubber from an associated data collection in your app. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nsscrubberdatasource?language=objc
type PScrubberDataSource interface {
	// optional
	ScrubberViewForItemAtIndex(scrubber Scrubber, index int) ScrubberItemView
	HasScrubberViewForItemAtIndex() bool

	// optional
	NumberOfItemsForScrubber(scrubber Scrubber) int
	HasNumberOfItemsForScrubber() bool
}

// ensure impl type implements protocol interface
var _ PScrubberDataSource = (*ScrubberDataSourceObject)(nil)

// A concrete type for the [PScrubberDataSource] protocol.
type ScrubberDataSourceObject struct {
	objc.Object
}

func (s_ ScrubberDataSourceObject) HasScrubberViewForItemAtIndex() bool {
	return s_.RespondsToSelector(objc.Sel("scrubber:viewForItemAtIndex:"))
}

// Asks the data source object for the view the corresponds to the specified item in the scrubber. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nsscrubberdatasource/2544709-scrubber?language=objc
func (s_ ScrubberDataSourceObject) ScrubberViewForItemAtIndex(scrubber Scrubber, index int) ScrubberItemView {
	rv := objc.Call[ScrubberItemView](s_, objc.Sel("scrubber:viewForItemAtIndex:"), scrubber, index)
	return rv
}

func (s_ ScrubberDataSourceObject) HasNumberOfItemsForScrubber() bool {
	return s_.RespondsToSelector(objc.Sel("numberOfItemsForScrubber:"))
}

// Asks the data source for the number of items in the scrubber. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nsscrubberdatasource/2544845-numberofitemsforscrubber?language=objc
func (s_ ScrubberDataSourceObject) NumberOfItemsForScrubber(scrubber Scrubber) int {
	rv := objc.Call[int](s_, objc.Sel("numberOfItemsForScrubber:"), scrubber)
	return rv
}
