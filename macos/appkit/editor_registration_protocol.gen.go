// Code generated by DarwinKit. DO NOT EDIT.

package appkit

import (
	"github.com/progrium/darwinkit/objc"
)

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nseditorregistration?language=objc
type PEditorRegistration interface {
	// optional
	ObjectDidBeginEditing(editor EditorObject)
	HasObjectDidBeginEditing() bool

	// optional
	ObjectDidEndEditing(editor EditorObject)
	HasObjectDidEndEditing() bool
}

// ensure impl type implements protocol interface
var _ PEditorRegistration = (*EditorRegistrationObject)(nil)

// A concrete type for the [PEditorRegistration] protocol.
type EditorRegistrationObject struct {
	objc.Object
}

func (e_ EditorRegistrationObject) HasObjectDidBeginEditing() bool {
	return e_.RespondsToSelector(objc.Sel("objectDidBeginEditing:"))
}

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nseditorregistration/3005188-objectdidbeginediting?language=objc
func (e_ EditorRegistrationObject) ObjectDidBeginEditing(editor EditorObject) {
	po0 := objc.WrapAsProtocol("NSEditor", editor)
	objc.Call[objc.Void](e_, objc.Sel("objectDidBeginEditing:"), po0)
}

func (e_ EditorRegistrationObject) HasObjectDidEndEditing() bool {
	return e_.RespondsToSelector(objc.Sel("objectDidEndEditing:"))
}

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nseditorregistration/3005189-objectdidendediting?language=objc
func (e_ EditorRegistrationObject) ObjectDidEndEditing(editor EditorObject) {
	po0 := objc.WrapAsProtocol("NSEditor", editor)
	objc.Call[objc.Void](e_, objc.Sel("objectDidEndEditing:"), po0)
}
