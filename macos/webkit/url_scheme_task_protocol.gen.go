// Code generated by DarwinKit. DO NOT EDIT.

package webkit

import (
	"github.com/progrium/darwinkit/macos/foundation"
	"github.com/progrium/darwinkit/objc"
)

// An interface that WebKit uses to request custom resources from your app. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/webkit/wkurlschemetask?language=objc
type PURLSchemeTask interface {
	// optional
	DidFailWithError(error foundation.Error)
	HasDidFailWithError() bool

	// optional
	DidFinish()
	HasDidFinish() bool

	// optional
	DidReceiveData(data []byte)
	HasDidReceiveData() bool

	// optional
	DidReceiveResponse(response foundation.URLResponse)
	HasDidReceiveResponse() bool

	// optional
	Request() foundation.URLRequest
	HasRequest() bool
}

// ensure impl type implements protocol interface
var _ PURLSchemeTask = (*URLSchemeTaskObject)(nil)

// A concrete type for the [PURLSchemeTask] protocol.
type URLSchemeTaskObject struct {
	objc.Object
}

func (u_ URLSchemeTaskObject) HasDidFailWithError() bool {
	return u_.RespondsToSelector(objc.Sel("didFailWithError:"))
}

// Completes the task and reports the specified error back to WebKit. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/webkit/wkurlschemetask/2890841-didfailwitherror?language=objc
func (u_ URLSchemeTaskObject) DidFailWithError(error foundation.Error) {
	objc.Call[objc.Void](u_, objc.Sel("didFailWithError:"), error)
}

func (u_ URLSchemeTaskObject) HasDidFinish() bool {
	return u_.RespondsToSelector(objc.Sel("didFinish"))
}

// Signals the successful completion of the task. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/webkit/wkurlschemetask/2890837-didfinish?language=objc
func (u_ URLSchemeTaskObject) DidFinish() {
	objc.Call[objc.Void](u_, objc.Sel("didFinish"))
}

func (u_ URLSchemeTaskObject) HasDidReceiveData() bool {
	return u_.RespondsToSelector(objc.Sel("didReceiveData:"))
}

// Sends some or all of the resource data to WebKit. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/webkit/wkurlschemetask/2890836-didreceivedata?language=objc
func (u_ URLSchemeTaskObject) DidReceiveData(data []byte) {
	objc.Call[objc.Void](u_, objc.Sel("didReceiveData:"), data)
}

func (u_ URLSchemeTaskObject) HasDidReceiveResponse() bool {
	return u_.RespondsToSelector(objc.Sel("didReceiveResponse:"))
}

// Returns a URL response to WebKit with information about the requested resource. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/webkit/wkurlschemetask/2890839-didreceiveresponse?language=objc
func (u_ URLSchemeTaskObject) DidReceiveResponse(response foundation.URLResponse) {
	objc.Call[objc.Void](u_, objc.Sel("didReceiveResponse:"), response)
}

func (u_ URLSchemeTaskObject) HasRequest() bool {
	return u_.RespondsToSelector(objc.Sel("request"))
}

// Information about the resource to load. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/webkit/wkurlschemetask/2890840-request?language=objc
func (u_ URLSchemeTaskObject) Request() foundation.URLRequest {
	rv := objc.Call[foundation.URLRequest](u_, objc.Sel("request"))
	return rv
}
