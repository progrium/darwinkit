// Code generated by DarwinKit. DO NOT EDIT.

package screencapturekit

import (
	"unsafe"

	"github.com/progrium/macdriver/macos/corefoundation"
	"github.com/progrium/macdriver/macos/coregraphics"
	"github.com/progrium/macdriver/macos/coremedia"
	"github.com/progrium/macdriver/objc"
)

// The class instance for the [StreamConfiguration] class.
var StreamConfigurationClass = _StreamConfigurationClass{objc.GetClass("SCStreamConfiguration")}

type _StreamConfigurationClass struct {
	objc.Class
}

// An interface definition for the [StreamConfiguration] class.
type IStreamConfiguration interface {
	objc.IObject
	Width() uint
	SetWidth(value uint)
	QueueDepth() int
	SetQueueDepth(value int)
	ShowsCursor() bool
	SetShowsCursor(value bool)
	Height() uint
	SetHeight(value uint)
	ColorSpaceName() corefoundation.StringRef
	SetColorSpaceName(value corefoundation.StringRef)
	BackgroundColor() coregraphics.ColorRef
	SetBackgroundColor(value coregraphics.ColorRef)
	SourceRect() coregraphics.Rect
	SetSourceRect(value coregraphics.Rect)
	MinimumFrameInterval() coremedia.Time
	SetMinimumFrameInterval(value coremedia.Time)
	PixelFormat() uint
	SetPixelFormat(value uint)
	DestinationRect() coregraphics.Rect
	SetDestinationRect(value coregraphics.Rect)
	ColorMatrix() corefoundation.StringRef
	SetColorMatrix(value corefoundation.StringRef)
	ScalesToFit() bool
	SetScalesToFit(value bool)
}

// An object that provides the output configuration for a stream. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration?language=objc
type StreamConfiguration struct {
	objc.Object
}

func StreamConfigurationFrom(ptr unsafe.Pointer) StreamConfiguration {
	return StreamConfiguration{
		Object: objc.ObjectFrom(ptr),
	}
}

func (sc _StreamConfigurationClass) Alloc() StreamConfiguration {
	rv := objc.Call[StreamConfiguration](sc, objc.Sel("alloc"))
	return rv
}

func (sc _StreamConfigurationClass) New() StreamConfiguration {
	rv := objc.Call[StreamConfiguration](sc, objc.Sel("new"))
	rv.Autorelease()
	return rv
}

func NewStreamConfiguration() StreamConfiguration {
	return StreamConfigurationClass.New()
}

func (s_ StreamConfiguration) Init() StreamConfiguration {
	rv := objc.Call[StreamConfiguration](s_, objc.Sel("init"))
	return rv
}

// The width of the output. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919830-width?language=objc
func (s_ StreamConfiguration) Width() uint {
	rv := objc.Call[uint](s_, objc.Sel("width"))
	return rv
}

// The width of the output. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919830-width?language=objc
func (s_ StreamConfiguration) SetWidth(value uint) {
	objc.Call[objc.Void](s_, objc.Sel("setWidth:"), value)
}

// The maximum number of frames for the queue to store. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919826-queuedepth?language=objc
func (s_ StreamConfiguration) QueueDepth() int {
	rv := objc.Call[int](s_, objc.Sel("queueDepth"))
	return rv
}

// The maximum number of frames for the queue to store. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919826-queuedepth?language=objc
func (s_ StreamConfiguration) SetQueueDepth(value int) {
	objc.Call[objc.Void](s_, objc.Sel("setQueueDepth:"), value)
}

// A Boolean value that determines whether the cursor is visible in the stream. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919828-showscursor?language=objc
func (s_ StreamConfiguration) ShowsCursor() bool {
	rv := objc.Call[bool](s_, objc.Sel("showsCursor"))
	return rv
}

// A Boolean value that determines whether the cursor is visible in the stream. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919828-showscursor?language=objc
func (s_ StreamConfiguration) SetShowsCursor(value bool) {
	objc.Call[objc.Void](s_, objc.Sel("setShowsCursor:"), value)
}

// The height of the output. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919823-height?language=objc
func (s_ StreamConfiguration) Height() uint {
	rv := objc.Call[uint](s_, objc.Sel("height"))
	return rv
}

// The height of the output. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919823-height?language=objc
func (s_ StreamConfiguration) SetHeight(value uint) {
	objc.Call[objc.Void](s_, objc.Sel("setHeight:"), value)
}

// A color space to use for the output buffer. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919821-colorspacename?language=objc
func (s_ StreamConfiguration) ColorSpaceName() corefoundation.StringRef {
	rv := objc.Call[corefoundation.StringRef](s_, objc.Sel("colorSpaceName"))
	return rv
}

// A color space to use for the output buffer. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919821-colorspacename?language=objc
func (s_ StreamConfiguration) SetColorSpaceName(value corefoundation.StringRef) {
	objc.Call[objc.Void](s_, objc.Sel("setColorSpaceName:"), value)
}

// A background color for the output. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919819-backgroundcolor?language=objc
func (s_ StreamConfiguration) BackgroundColor() coregraphics.ColorRef {
	rv := objc.Call[coregraphics.ColorRef](s_, objc.Sel("backgroundColor"))
	return rv
}

// A background color for the output. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919819-backgroundcolor?language=objc
func (s_ StreamConfiguration) SetBackgroundColor(value coregraphics.ColorRef) {
	objc.Call[objc.Void](s_, objc.Sel("setBackgroundColor:"), value)
}

// A rectangle that specifies the source area to capture. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919829-sourcerect?language=objc
func (s_ StreamConfiguration) SourceRect() coregraphics.Rect {
	rv := objc.Call[coregraphics.Rect](s_, objc.Sel("sourceRect"))
	return rv
}

// A rectangle that specifies the source area to capture. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919829-sourcerect?language=objc
func (s_ StreamConfiguration) SetSourceRect(value coregraphics.Rect) {
	objc.Call[objc.Void](s_, objc.Sel("setSourceRect:"), value)
}

// The desired minimum time between frame updates, in seconds. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3928174-minimumframeinterval?language=objc
func (s_ StreamConfiguration) MinimumFrameInterval() coremedia.Time {
	rv := objc.Call[coremedia.Time](s_, objc.Sel("minimumFrameInterval"))
	return rv
}

// The desired minimum time between frame updates, in seconds. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3928174-minimumframeinterval?language=objc
func (s_ StreamConfiguration) SetMinimumFrameInterval(value coremedia.Time) {
	objc.Call[objc.Void](s_, objc.Sel("setMinimumFrameInterval:"), value)
}

// A pixel format for sample buffers that a stream outputs. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919825-pixelformat?language=objc
func (s_ StreamConfiguration) PixelFormat() uint {
	rv := objc.Call[uint](s_, objc.Sel("pixelFormat"))
	return rv
}

// A pixel format for sample buffers that a stream outputs. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919825-pixelformat?language=objc
func (s_ StreamConfiguration) SetPixelFormat(value uint) {
	objc.Call[objc.Void](s_, objc.Sel("setPixelFormat:"), value)
}

// A rectangle that specifies a destination into which to write the output. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919822-destinationrect?language=objc
func (s_ StreamConfiguration) DestinationRect() coregraphics.Rect {
	rv := objc.Call[coregraphics.Rect](s_, objc.Sel("destinationRect"))
	return rv
}

// A rectangle that specifies a destination into which to write the output. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919822-destinationrect?language=objc
func (s_ StreamConfiguration) SetDestinationRect(value coregraphics.Rect) {
	objc.Call[objc.Void](s_, objc.Sel("setDestinationRect:"), value)
}

// A color matrix to apply to the output surface. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919820-colormatrix?language=objc
func (s_ StreamConfiguration) ColorMatrix() corefoundation.StringRef {
	rv := objc.Call[corefoundation.StringRef](s_, objc.Sel("colorMatrix"))
	return rv
}

// A color matrix to apply to the output surface. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919820-colormatrix?language=objc
func (s_ StreamConfiguration) SetColorMatrix(value corefoundation.StringRef) {
	objc.Call[objc.Void](s_, objc.Sel("setColorMatrix:"), value)
}

// A Boolean value that indicates whether to scale the output to fit the configured width and height. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919827-scalestofit?language=objc
func (s_ StreamConfiguration) ScalesToFit() bool {
	rv := objc.Call[bool](s_, objc.Sel("scalesToFit"))
	return rv
}

// A Boolean value that indicates whether to scale the output to fit the configured width and height. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamconfiguration/3919827-scalestofit?language=objc
func (s_ StreamConfiguration) SetScalesToFit(value bool) {
	objc.Call[objc.Void](s_, objc.Sel("setScalesToFit:"), value)
}
