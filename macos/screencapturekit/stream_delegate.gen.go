// Code generated by DarwinKit. DO NOT EDIT.

package screencapturekit

import (
	"github.com/progrium/macdriver/macos/foundation"
	"github.com/progrium/macdriver/objc"
)

// A delegate protocol to adopt to respond to stream events. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamdelegate?language=objc
type PStreamDelegate interface {
	// optional
	StreamDidStopWithError(stream Stream, error foundation.Error)
	HasStreamDidStopWithError() bool
}

// A delegate implementation builder for the [PStreamDelegate] protocol.
type StreamDelegate struct {
	_StreamDidStopWithError func(stream Stream, error foundation.Error)
}

func (di *StreamDelegate) HasStreamDidStopWithError() bool {
	return di._StreamDidStopWithError != nil
}

// Tells the delegate that the stream stopped with an error. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamdelegate/3916743-stream?language=objc
func (di *StreamDelegate) SetStreamDidStopWithError(f func(stream Stream, error foundation.Error)) {
	di._StreamDidStopWithError = f
}

// Tells the delegate that the stream stopped with an error. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamdelegate/3916743-stream?language=objc
func (di *StreamDelegate) StreamDidStopWithError(stream Stream, error foundation.Error) {
	di._StreamDidStopWithError(stream, error)
}

// ensure impl type implements protocol interface
var _ PStreamDelegate = (*StreamDelegateObject)(nil)

// A concrete type for the [PStreamDelegate] protocol.
type StreamDelegateObject struct {
	objc.Object
}

func (s_ StreamDelegateObject) HasStreamDidStopWithError() bool {
	return s_.RespondsToSelector(objc.Sel("stream:didStopWithError:"))
}

// Tells the delegate that the stream stopped with an error. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamdelegate/3916743-stream?language=objc
func (s_ StreamDelegateObject) StreamDidStopWithError(stream Stream, error foundation.Error) {
	objc.Call[objc.Void](s_, objc.Sel("stream:didStopWithError:"), objc.Ptr(stream), objc.Ptr(error))
}
