// Code generated by DarwinKit. DO NOT EDIT.

package screencapturekit

import (
	"github.com/progrium/macdriver/macos/coremedia"
	"github.com/progrium/macdriver/objc"
)

// A protocol you adopt to receive stream output events. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamoutput?language=objc
type PStreamOutput interface {
	// optional
	StreamDidOutputSampleBufferOfType(stream Stream, sampleBuffer coremedia.SampleBufferRef, type_ StreamOutputType)
	HasStreamDidOutputSampleBufferOfType() bool
}

// ensure impl type implements protocol interface
var _ PStreamOutput = (*StreamOutputObject)(nil)

// A concrete type for the [PStreamOutput] protocol.
type StreamOutputObject struct {
	objc.Object
}

func (s_ StreamOutputObject) HasStreamDidOutputSampleBufferOfType() bool {
	return s_.RespondsToSelector(objc.Sel("stream:didOutputSampleBuffer:ofType:"))
}

// Tells the delegate that the stream produced a video frame. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstreamoutput/3928182-stream?language=objc
func (s_ StreamOutputObject) StreamDidOutputSampleBufferOfType(stream Stream, sampleBuffer coremedia.SampleBufferRef, type_ StreamOutputType) {
	objc.Call[objc.Void](s_, objc.Sel("stream:didOutputSampleBuffer:ofType:"), objc.Ptr(stream), sampleBuffer, type_)
}
