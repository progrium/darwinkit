// Code generated by DarwinKit. DO NOT EDIT.

package screencapturekit

import (
	"unsafe"

	"github.com/progrium/macdriver/dispatch"
	"github.com/progrium/macdriver/macos/foundation"
	"github.com/progrium/macdriver/objc"
)

// The class instance for the [Stream] class.
var StreamClass = _StreamClass{objc.GetClass("SCStream")}

type _StreamClass struct {
	objc.Class
}

// An interface definition for the [Stream] class.
type IStream interface {
	objc.IObject
	RemoveStreamOutputTypeError(output PStreamOutput, type_ StreamOutputType, error foundation.IError) bool
	RemoveStreamOutputObjectTypeError(outputObject objc.IObject, type_ StreamOutputType, error foundation.IError) bool
	StopCaptureWithCompletionHandler(completionHandler func(error foundation.Error))
	AddStreamOutputTypeSampleHandlerQueueError(output PStreamOutput, type_ StreamOutputType, sampleHandlerQueue dispatch.Queue, error foundation.IError) bool
	AddStreamOutputObjectTypeSampleHandlerQueueError(outputObject objc.IObject, type_ StreamOutputType, sampleHandlerQueue dispatch.Queue, error foundation.IError) bool
	UpdateConfigurationCompletionHandler(streamConfig IStreamConfiguration, completionHandler func(error foundation.Error))
	StartCaptureWithCompletionHandler(completionHandler func(error foundation.Error))
	UpdateContentFilterCompletionHandler(contentFilter IContentFilter, completionHandler func(error foundation.Error))
}

// An object that represents a stream of shareable content. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstream?language=objc
type Stream struct {
	objc.Object
}

func StreamFrom(ptr unsafe.Pointer) Stream {
	return Stream{
		Object: objc.ObjectFrom(ptr),
	}
}

func (s_ Stream) InitWithFilterConfigurationDelegate(contentFilter IContentFilter, streamConfig IStreamConfiguration, delegate PStreamDelegate) Stream {
	po2 := objc.WrapAsProtocol("SCStreamDelegate", delegate)
	rv := objc.Call[Stream](s_, objc.Sel("initWithFilter:configuration:delegate:"), objc.Ptr(contentFilter), objc.Ptr(streamConfig), po2)
	return rv
}

// Creates a stream with a content filter and configuration. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstream/3928169-initwithfilter?language=objc
func NewStreamWithFilterConfigurationDelegate(contentFilter IContentFilter, streamConfig IStreamConfiguration, delegate PStreamDelegate) Stream {
	instance := StreamClass.Alloc().InitWithFilterConfigurationDelegate(contentFilter, streamConfig, delegate)
	instance.Autorelease()
	return instance
}

func (sc _StreamClass) Alloc() Stream {
	rv := objc.Call[Stream](sc, objc.Sel("alloc"))
	return rv
}

func (sc _StreamClass) New() Stream {
	rv := objc.Call[Stream](sc, objc.Sel("new"))
	rv.Autorelease()
	return rv
}

func NewStream() Stream {
	return StreamClass.New()
}

func (s_ Stream) Init() Stream {
	rv := objc.Call[Stream](s_, objc.Sel("init"))
	return rv
}

// Removes a destination from receiving stream output. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstream/3928170-removestreamoutput?language=objc
func (s_ Stream) RemoveStreamOutputTypeError(output PStreamOutput, type_ StreamOutputType, error foundation.IError) bool {
	po0 := objc.WrapAsProtocol("SCStreamOutput", output)
	rv := objc.Call[bool](s_, objc.Sel("removeStreamOutput:type:error:"), po0, type_, objc.Ptr(error))
	return rv
}

// Removes a destination from receiving stream output. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstream/3928170-removestreamoutput?language=objc
func (s_ Stream) RemoveStreamOutputObjectTypeError(outputObject objc.IObject, type_ StreamOutputType, error foundation.IError) bool {
	rv := objc.Call[bool](s_, objc.Sel("removeStreamOutput:type:error:"), objc.Ptr(outputObject), type_, objc.Ptr(error))
	return rv
}

// Stops the stream. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstream/3928172-stopcapturewithcompletionhandler?language=objc
func (s_ Stream) StopCaptureWithCompletionHandler(completionHandler func(error foundation.Error)) {
	objc.Call[objc.Void](s_, objc.Sel("stopCaptureWithCompletionHandler:"), completionHandler)
}

// Adds a destination that receives the stream output. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstream/3928168-addstreamoutput?language=objc
func (s_ Stream) AddStreamOutputTypeSampleHandlerQueueError(output PStreamOutput, type_ StreamOutputType, sampleHandlerQueue dispatch.Queue, error foundation.IError) bool {
	po0 := objc.WrapAsProtocol("SCStreamOutput", output)
	rv := objc.Call[bool](s_, objc.Sel("addStreamOutput:type:sampleHandlerQueue:error:"), po0, type_, sampleHandlerQueue, objc.Ptr(error))
	return rv
}

// Adds a destination that receives the stream output. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstream/3928168-addstreamoutput?language=objc
func (s_ Stream) AddStreamOutputObjectTypeSampleHandlerQueueError(outputObject objc.IObject, type_ StreamOutputType, sampleHandlerQueue dispatch.Queue, error foundation.IError) bool {
	rv := objc.Call[bool](s_, objc.Sel("addStreamOutput:type:sampleHandlerQueue:error:"), objc.Ptr(outputObject), type_, sampleHandlerQueue, objc.Ptr(error))
	return rv
}

// Updates the stream with a new configuration. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstream/3928173-updateconfiguration?language=objc
func (s_ Stream) UpdateConfigurationCompletionHandler(streamConfig IStreamConfiguration, completionHandler func(error foundation.Error)) {
	objc.Call[objc.Void](s_, objc.Sel("updateConfiguration:completionHandler:"), objc.Ptr(streamConfig), completionHandler)
}

// Starts the stream with a callback to indicate whether it successfully starts. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstream/3928171-startcapturewithcompletionhandle?language=objc
func (s_ Stream) StartCaptureWithCompletionHandler(completionHandler func(error foundation.Error)) {
	objc.Call[objc.Void](s_, objc.Sel("startCaptureWithCompletionHandler:"), completionHandler)
}

// Updates the stream by applying a new content filter. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scstream/3916740-updatecontentfilter?language=objc
func (s_ Stream) UpdateContentFilterCompletionHandler(contentFilter IContentFilter, completionHandler func(error foundation.Error)) {
	objc.Call[objc.Void](s_, objc.Sel("updateContentFilter:completionHandler:"), objc.Ptr(contentFilter), completionHandler)
}
