// Code generated by DarwinKit. DO NOT EDIT.

package screencapturekit

import (
	"unsafe"

	"github.com/progrium/macdriver/macos/coregraphics"
	"github.com/progrium/macdriver/objc"
)

// The class instance for the [Window] class.
var WindowClass = _WindowClass{objc.GetClass("SCWindow")}

type _WindowClass struct {
	objc.Class
}

// An interface definition for the [Window] class.
type IWindow interface {
	objc.IObject
	OwningApplication() RunningApplication
	WindowID() coregraphics.WindowID
	WindowLayer() int
	IsOnScreen() bool
	Frame() coregraphics.Rect
	Title() string
}

// An object that represents an onscreen window. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scwindow?language=objc
type Window struct {
	objc.Object
}

func WindowFrom(ptr unsafe.Pointer) Window {
	return Window{
		Object: objc.ObjectFrom(ptr),
	}
}

func (wc _WindowClass) Alloc() Window {
	rv := objc.Call[Window](wc, objc.Sel("alloc"))
	return rv
}

func (wc _WindowClass) New() Window {
	rv := objc.Call[Window](wc, objc.Sel("new"))
	rv.Autorelease()
	return rv
}

func NewWindow() Window {
	return WindowClass.New()
}

func (w_ Window) Init() Window {
	rv := objc.Call[Window](w_, objc.Sel("init"))
	return rv
}

// The app that owns the window. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scwindow/3916792-owningapplication?language=objc
func (w_ Window) OwningApplication() RunningApplication {
	rv := objc.Call[RunningApplication](w_, objc.Sel("owningApplication"))
	return rv
}

// The Core Graphics window identifier. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scwindow/3916793-windowid?language=objc
func (w_ Window) WindowID() coregraphics.WindowID {
	rv := objc.Call[coregraphics.WindowID](w_, objc.Sel("windowID"))
	return rv
}

// The layer of the window relative to other windows. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scwindow/3919802-windowlayer?language=objc
func (w_ Window) WindowLayer() int {
	rv := objc.Call[int](w_, objc.Sel("windowLayer"))
	return rv
}

// A Boolean value that indicates whether the window is on screen. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scwindow/3916790-onscreen?language=objc
func (w_ Window) IsOnScreen() bool {
	rv := objc.Call[bool](w_, objc.Sel("isOnScreen"))
	return rv
}

// A rectangle the represents the frame of the window within a display. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scwindow/3919800-frame?language=objc
func (w_ Window) Frame() coregraphics.Rect {
	rv := objc.Call[coregraphics.Rect](w_, objc.Sel("frame"))
	return rv
}

// The string that displays in a windowâ€™s title bar. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scwindow/3919801-title?language=objc
func (w_ Window) Title() string {
	rv := objc.Call[string](w_, objc.Sel("title"))
	return rv
}
