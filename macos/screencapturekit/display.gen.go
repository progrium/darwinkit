// Code generated by DarwinKit. DO NOT EDIT.

package screencapturekit

import (
	"unsafe"

	"github.com/progrium/macdriver/macos/coregraphics"
	"github.com/progrium/macdriver/objc"
)

// The class instance for the [Display] class.
var DisplayClass = _DisplayClass{objc.GetClass("SCDisplay")}

type _DisplayClass struct {
	objc.Class
}

// An interface definition for the [Display] class.
type IDisplay interface {
	objc.IObject
	Width() int
	Height() int
	DisplayID() coregraphics.DirectDisplayID
	Frame() coregraphics.Rect
}

// An object that represents a display device. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scdisplay?language=objc
type Display struct {
	objc.Object
}

func DisplayFrom(ptr unsafe.Pointer) Display {
	return Display{
		Object: objc.ObjectFrom(ptr),
	}
}

func (dc _DisplayClass) Alloc() Display {
	rv := objc.Call[Display](dc, objc.Sel("alloc"))
	return rv
}

func (dc _DisplayClass) New() Display {
	rv := objc.Call[Display](dc, objc.Sel("new"))
	rv.Autorelease()
	return rv
}

func NewDisplay() Display {
	return DisplayClass.New()
}

func (d_ Display) Init() Display {
	rv := objc.Call[Display](d_, objc.Sel("init"))
	return rv
}

// The width of the display in points. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scdisplay/3916722-width?language=objc
func (d_ Display) Width() int {
	rv := objc.Call[int](d_, objc.Sel("width"))
	return rv
}

// The height of the display in points. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scdisplay/3916721-height?language=objc
func (d_ Display) Height() int {
	rv := objc.Call[int](d_, objc.Sel("height"))
	return rv
}

// The Core Graphics display identifier. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scdisplay/3916720-displayid?language=objc
func (d_ Display) DisplayID() coregraphics.DirectDisplayID {
	rv := objc.Call[coregraphics.DirectDisplayID](d_, objc.Sel("displayID"))
	return rv
}

// The frame of the display. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scdisplay/3919798-frame?language=objc
func (d_ Display) Frame() coregraphics.Rect {
	rv := objc.Call[coregraphics.Rect](d_, objc.Sel("frame"))
	return rv
}
