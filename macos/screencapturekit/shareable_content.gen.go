// Code generated by DarwinKit. DO NOT EDIT.

package screencapturekit

import (
	"unsafe"

	"github.com/progrium/macdriver/macos/foundation"
	"github.com/progrium/macdriver/objc"
)

// The class instance for the [ShareableContent] class.
var ShareableContentClass = _ShareableContentClass{objc.GetClass("SCShareableContent")}

type _ShareableContentClass struct {
	objc.Class
}

// An interface definition for the [ShareableContent] class.
type IShareableContent interface {
	objc.IObject
	Windows() []Window
	Displays() []Display
	Applications() []RunningApplication
}

// An object that represents a set of displays, apps, and windows that your app can capture. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scshareablecontent?language=objc
type ShareableContent struct {
	objc.Object
}

func ShareableContentFrom(ptr unsafe.Pointer) ShareableContent {
	return ShareableContent{
		Object: objc.ObjectFrom(ptr),
	}
}

func (sc _ShareableContentClass) Alloc() ShareableContent {
	rv := objc.Call[ShareableContent](sc, objc.Sel("alloc"))
	return rv
}

func (sc _ShareableContentClass) New() ShareableContent {
	rv := objc.Call[ShareableContent](sc, objc.Sel("new"))
	rv.Autorelease()
	return rv
}

func NewShareableContent() ShareableContent {
	return ShareableContentClass.New()
}

func (s_ ShareableContent) Init() ShareableContent {
	rv := objc.Call[ShareableContent](s_, objc.Sel("init"))
	return rv
}

// Retrieves the displays, apps, and windows that your app can capture. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scshareablecontent/3916733-getshareablecontentwithcompletio?language=objc
func (sc _ShareableContentClass) GetShareableContentWithCompletionHandler(completionHandler func(shareableContent ShareableContent, error foundation.Error)) {
	objc.Call[objc.Void](sc, objc.Sel("getShareableContentWithCompletionHandler:"), completionHandler)
}

// Retrieves the displays, apps, and windows that your app can capture. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scshareablecontent/3916733-getshareablecontentwithcompletio?language=objc
func ShareableContent_GetShareableContentWithCompletionHandler(completionHandler func(shareableContent ShareableContent, error foundation.Error)) {
	ShareableContentClass.GetShareableContentWithCompletionHandler(completionHandler)
}

// Retrieves the displays, apps, and windows that are behind the specified window. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scshareablecontent/3916732-getshareablecontentexcludingdesk?language=objc
func (sc _ShareableContentClass) GetShareableContentExcludingDesktopWindowsOnScreenWindowsOnlyBelowWindowCompletionHandler(excludeDesktopWindows bool, window IWindow, completionHandler func(shareableContent ShareableContent, error foundation.Error)) {
	objc.Call[objc.Void](sc, objc.Sel("getShareableContentExcludingDesktopWindows:onScreenWindowsOnlyBelowWindow:completionHandler:"), excludeDesktopWindows, objc.Ptr(window), completionHandler)
}

// Retrieves the displays, apps, and windows that are behind the specified window. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scshareablecontent/3916732-getshareablecontentexcludingdesk?language=objc
func ShareableContent_GetShareableContentExcludingDesktopWindowsOnScreenWindowsOnlyBelowWindowCompletionHandler(excludeDesktopWindows bool, window IWindow, completionHandler func(shareableContent ShareableContent, error foundation.Error)) {
	ShareableContentClass.GetShareableContentExcludingDesktopWindowsOnScreenWindowsOnlyBelowWindowCompletionHandler(excludeDesktopWindows, window, completionHandler)
}

// The windows that are available to capture. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scshareablecontent/3916734-windows?language=objc
func (s_ ShareableContent) Windows() []Window {
	rv := objc.Call[[]Window](s_, objc.Sel("windows"))
	return rv
}

// The displays that are available to capture. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scshareablecontent/3916729-displays?language=objc
func (s_ ShareableContent) Displays() []Display {
	rv := objc.Call[[]Display](s_, objc.Sel("displays"))
	return rv
}

// The apps that are available to capture. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/screencapturekit/scshareablecontent/3916728-applications?language=objc
func (s_ ShareableContent) Applications() []RunningApplication {
	rv := objc.Call[[]RunningApplication](s_, objc.Sel("applications"))
	return rv
}
